<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace:命名空间，用于隔离sql语句 ,namespace等于Mapper接口地址-->
<!-- #{}表示一个占位符 -->
<mapper namespace="cn.items.mssm.mapper.FroleMapper">
    
    <!-- 查找所有的角色信息 -->
    <select id="findRoleInfo" resultType="FRoleCustom">
        select * from f_role 
    </select>
    
    <!-- 根据Id查找角色信息 -->
    <select id="findRInfoById" parameterType="int" resultType="FRoleCustom">
        select * from f_role where RoleId=#{roleid}
    </select>
    
    <!-- 查找对应名称的角色Id -->
    <select id="findRIdByName" parameterType="String" resultType="int">
        select RoleId from f_role where Title=#{title}
    </select>
    
    <!-- 增加角色信息 -->
    <sql id="RoleInfokey">
      <trim suffixOverrides=",">
        <if test="title!=null">
            Title,
        </if>
        <if test="memo!=null">
            Memo,
        </if>
      </trim>
    </sql>
    <sql id="RoleInfovalue">
      <trim suffixOverrides=",">
        <if test="title!=null">
            #{title},
        </if>
        <if test="memo!=null">
            #{memo},
        </if>
      </trim>
    </sql>
    <insert id="addRoleInfo" parameterType="FRoleCustom">
        insert into f_role(<include refid="RoleInfokey"></include>) values(<include refid="RoleInfovalue"></include>)
    </insert>
    
    <!-- 修改角色信息 -->
    <update id="updateRoleInfo" parameterType="FRoleCustom">
        update f_role
        <trim prefix="set" suffixOverrides=",">
            <if test="title!=null and title!=''">Title=#{title},</if>
            <if test="memo!=null and memo!=''">Memo=#{memo},</if>
        </trim>
        <where>
            <if test="roleid!=null and roleid!=''">
                and RoleId=#{roleid}
            </if>
        </where>
    </update>
    
    <!-- 删除角色信息 -->
    <delete id="deleteRoleInfo" parameterType="int">
        delete from f_role where RoleId=#{roleid}
    </delete>
    
    <!-- 获取对应角色的功能 -->
    <select id="findRFunc" parameterType="int" resultType="FRolefuncCustom">
        select * from f_rolefunc where RoleId=#{roleid}
    </select>
    
    <!-- 删除对应角色Id的角色功能 -->
    <delete id="delRFunc" parameterType="int">
        delete from f_rolefunc where RoleId=#{roleid}
    </delete>
    
    <!-- 添加对应角色Id的角色功能  -->
    <sql id="Rfunckey">
      <trim suffixOverrides=",">
        <if test="roleid!=null">
            RoleId,
        </if>
        <if test="funcid!=null">
            FuncId,
        </if>
      </trim>
    </sql>
    
    <sql id="Rfuncvalue">
      <trim suffixOverrides=",">
        <if test="roleid!=null">
            #{roleid},
        </if>
        <if test="funcid!=null">
            #{funcid},
        </if>
      </trim>
    </sql>
    <insert id="addRFunc" parameterType="FRolefuncCustom">
        insert into f_rolefunc(<include refid="Rfunckey"></include>) values(<include refid="Rfuncvalue"></include>)
    </insert>
    
    <!-- 获取用户对应的角色 -->
    <select id="findUserRoleTitle" parameterType="int" resultType="FRoleCustom">
        select f_role.RoleId,f_role.Title from f_role,f_userrole where f_role.RoleId=f_userrole.RoleId and UserId=#{userid}
    </select>
</mapper>